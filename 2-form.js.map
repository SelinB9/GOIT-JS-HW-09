{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const STORAGE_KEY = \"feedback-form-state\";\nconst form = document.querySelector('.feedback-form');\n\n// Sayfa yüklendiğinde localStorage'dan veriyi almak ve forma doldurmak\n//Bu fonksiyon çağrısı, sayfa yüklendiğinde formu önceki girilen verilere göre önceden doldurur.\n//Yani, kullanıcı sayfayı yenilerse veya tekrar gelirse, yazdıkları veriler kaybolmaz, tekrar görünür olur.\n//Görevdeki bu isteği karşılar \"Sayfa yüklendiğinde depo durumunu kontrol et, eğer kayıtlı veri varsa, form alanlarını bu verilerle doldur.\"\npopulateForm();\nform.addEventListener(\"input\", onFormInput);\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormInput(evt) {\n    //güncel form verisini alalım.\n    const formData = {\n        email: form.email.value.trim(),\n        message: form.message.value.trim(),//trim boşlukları baştan ve sondan kırpar.\n    };\n    // localstorage e kaydedelim (json string olarak)\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n}\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault(); //yeni syf açmasını önler artık öğrrendik.,\n\n    const email = form.email.value.trim();\n    const message = form.message.value.trim();\n\n    if (!email || !message) {\n        alert(\"lütfen email ve mesaj alanlarını doldurun.\");\n        return;\n    }\n    //consola nesne olarak yazdırmak\n    console.log({ email, message });\n    //formu temizliyelim\n    form.reset();\n    //localstorage den veriyi silelim.\n    localStorage.removeItem(STORAGE_KEY);\n}\n\nfunction populateForm() { //Amacı: LocalStorage'dan daha önce kaydedilmiş form verilerini alıp formu doldurmak.\n    const savedData = localStorage.getItem(STORAGE_KEY);\n    if (!savedData) return;//Eğer savedData boş (null veya undefined) ise fonksiyon hemen sona erer (return), çünkü dolduracak veri yoktur.\n  \n    try {      //try bloğu açılıyor. Çünkü JSON.parse() sırasında hata çıkabilir.Bu yüzden hataya karşı koruma amaçlı.\n      const { email, message } = JSON.parse(savedData);    //savedData JSON formatından gerçek bir JavaScript objesine çevriliyor (parse).\n                                                           //Bu obje içinde email ve message alanları varsa bunlar destructure edilip değişkenlere atanıyor.\n      if (email) form.email.value = email;   //GİRDİ VARSA ,input alanına atanır\n      if (message) form.message.value = message;   //GİRDİ VARSA, textarea alanına atanır.\n    } catch (error) {    //Eğer JSON.parse() veya diğer kodlarda hata olursa, buraya düşer.\n      console.error(\"localStorage verisi okunamadı\", error);\n    }\n  }"],"names":["STORAGE_KEY","form","populateForm","onFormInput","onFormSubmit","evt","formData","email","message","savedData","error"],"mappings":"oDAAA,MAAMA,EAAc,sBACdC,EAAO,SAAS,cAAc,gBAAgB,EAMpDC,IACAD,EAAK,iBAAiB,QAASE,CAAW,EAC1CF,EAAK,iBAAiB,SAAUG,CAAY,EAE5C,SAASD,EAAYE,EAAK,CAEtB,MAAMC,EAAW,CACb,MAAOL,EAAK,MAAM,MAAM,KAAM,EAC9B,QAASA,EAAK,QAAQ,MAAM,KAAM,CAC1C,EAEI,aAAa,QAAQD,EAAa,KAAK,UAAUM,CAAQ,CAAC,CAC9D,CAEA,SAASF,EAAaC,EAAK,CACvBA,EAAI,eAAc,EAElB,MAAME,EAAQN,EAAK,MAAM,MAAM,KAAI,EAC7BO,EAAUP,EAAK,QAAQ,MAAM,KAAI,EAEvC,GAAI,CAACM,GAAS,CAACC,EAAS,CACpB,MAAM,4CAA4C,EAClD,MACH,CAED,QAAQ,IAAI,CAAE,MAAAD,EAAO,QAAAC,CAAS,CAAA,EAE9BP,EAAK,MAAK,EAEV,aAAa,WAAWD,CAAW,CACvC,CAEA,SAASE,GAAe,CACpB,MAAMO,EAAY,aAAa,QAAQT,CAAW,EAClD,GAAKS,EAEL,GAAI,CACF,KAAM,CAAE,MAAAF,EAAO,QAAAC,CAAO,EAAK,KAAK,MAAMC,CAAS,EAE3CF,IAAON,EAAK,MAAM,MAAQM,GAC1BC,IAASP,EAAK,QAAQ,MAAQO,EACnC,OAAQE,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,CACrD,CACL"}